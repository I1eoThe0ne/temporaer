#!/usr/bin/env python3
import subprocess
import re
import sys

# prüfen der Commit-Message
# =========================
commit_msg_filepath = sys.argv[1]
with open(commit_msg_filepath, 'r') as file:
    commit_text = file.read()

commit_regex = re.compile(r'^[A-Z]+-\d+ .+')
# ----------------------------------
# '^[A-Z]+ Beginnend Grossbuchstaben
# -      Gefolgt von einem -
# \d+    Gefolgt von Ziffern 0-9
# space  gefolgt von einem Space
# .+     gefolgt von n Zeichen
# ----------------------------------
 

# check ob Commit Text der Regex entspricht
if not commit_regex.match(commit_text):
    print("Die Commit Message enspricht nicht dem Format. 'SDS-[9999] [Beschreibung]'")
    sys.exit(1) 
    

# prüfen des Branch-Namen
# =======================
current_branch_name = subprocess.check_output(['git', 'rev-parse', '--abbrev-ref', 'HEAD']).strip().decode('utf-8')


if current_branch_name == 'HEAD':
    sys.exit(0)
if current_branch_name == 'main':
    sys.exit(0)
if current_branch_name == 'develop':
    sys.exit(0)

    
commit_regex = re.compile(r'^feature/.+_.+')
# ----------------------------------
# '^feature/ Beginnend mit feature/
# .+     gefolgt von n Zeichen
# -      Gefolgt von einem -
# .+     gefolgt von n Zeichen
# ----------------------------------


# check ob Commit Text der Regex entspricht
# ----------------------------------
# print('git rev-parse --abbrev-ref HEAD')
# print(f"Vor Match / Der Brachname war : '{current_branch_name}'")
if not commit_regex.match(current_branch_name):
    print(f"Der Branchname enstspricht nicht dem Format : 'feature/[Bereich]_[Beschreibung]'.           Der Brachname war : '{current_branch_name}' ")
    sys.exit(1)

sys.exit(0)
